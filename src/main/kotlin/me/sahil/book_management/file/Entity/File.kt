package me.sahil.book_management.file.Entity

import jakarta.persistence.*
import me.sahil.book_management.user.entity.User
import java.time.LocalDateTime
import java.time.ZonedDateTime


/**
 * Entity class representing a file record in the database.
 *
 * This class is mapped to the "files" table in the database and contains information about
 * the file, including its name, MIME type, associated user, download URL, usage status,
 * and creation timestamp. It is used to persist file metadata in the system.
 *
 * @param id The unique identifier for the file.
 * @param fileName The name of the file.
 * @param mimeType The MIME type of the file (e.g., "image/png", "application/pdf").
 * @param user The user who uploaded the file, represented by a `User` entity.
 * @param downloadUrl The URL from which the file can be downloaded.
 * @param isUsed A flag indicating whether the file is in use or has been deleted.
 * @param createdAt The timestamp representing when the file was uploaded or created.
 */
@Entity
@Table(name = "files")
data class File(

    /**
     * The unique identifier of the file.
     * This field is automatically generated by the database.
     */
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    val id: Long = 0,

    /**
     * The name of the file.
     */
    @Column(nullable = false)
    val fileName: String,

    /**
     * The MIME type of the file (e.g., "image/png", "application/pdf").
     */
    @Column(nullable = false)
    val mimeType: String,

    /**
     * The user who uploaded the file.
     * This field is mapped to the "user_id" column and references the `User` entity.
     */
    @ManyToOne
    @JoinColumn(name = "user_id", nullable = false)
    val user: User,

    /**
     * The URL from which the file can be downloaded.
     */
    @Column(nullable = false)
    val downloadUrl: String,

    /**
     * A flag indicating whether the file is in use or has been deleted.
     */
    @Column(nullable = false)
    val isUsed: Boolean = false,

    /**
     * The timestamp representing when the file was uploaded or created.
     * By default, this is set to the current time when the file is created.
     */
    @Column(nullable = false)
    val createdAt: ZonedDateTime = ZonedDateTime.now()
) {
    /**
     * Default constructor needed for JPA.
     */
    constructor() : this(0, "", "", User(), "", false, ZonedDateTime.now())
}
